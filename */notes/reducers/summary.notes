As with the Actions, the reducers in this application utilize the redux-actions library. This tool benefits us by providing a short hand for creating both action creators and reducers.

A reducer is a function that takes in two parameters:
  (1) An Action
  (2) State

The function evaluates the action it is passed on the basis of the action.type property with a switch statement; and if the switch matches, it updates the global state.

One of the main principles of our reducers is that they should not modify existing state, but rather they should update state by completely replacing the existing state with new state.

For example, instead of modifying an existing array in global state, we would return a completely new array. This would mean utilizing the Array prototype methods .map, or .filter, instead of
utliziing the .pop or .push methods

Please see notes/reducers/summary.notes for more information on reducers

documentation: https://redux.js.org/docs/basics/Reducers.html
